<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>lives Blog</title>
  <icon>https://www.gravatar.com/avatar/ac621cb633833a833cdf1793eefdce3f</icon>
  <subtitle>还在奋进中的码农</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://live1158.github.io/"/>
  <updated>2017-11-05T14:01:23.537Z</updated>
  <id>http://live1158.github.io/</id>
  
  <author>
    <name>lives</name>
    <email>hanyu_ma@163.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Unity的自定义输出日志</title>
    <link href="http://live1158.github.io/2017/11/05/Unity%E7%9A%84%E8%87%AA%E5%AE%9A%E4%B9%89%E8%BE%93%E5%87%BA%E6%97%A5%E5%BF%97/"/>
    <id>http://live1158.github.io/2017/11/05/Unity的自定义输出日志/</id>
    <published>2017-11-05T13:56:57.492Z</published>
    <updated>2017-11-05T14:01:23.537Z</updated>
    
    <content type="html"><![CDATA[<h1><span id="关于输出日志">关于输出日志</span></h1><p>到了一家新公司，做的都是面对甲方现场的项目。正式接触项目之前就被告知甲方的现场总是会出现各种奇葩的问题，这就导致技术人员要无数次的出差去测试Bug并解决。好坏我就不评论了，毕竟这种模式已经进行了十几年了。我接手一个项目开始我就想着怎么规避现场的问题，后来就在项目结尾的时候写了个自定义的输出日志dll文件。</p><h2><span id="第一步创建文件">第一步：创建文件</span></h2><p>首先需要先引入UnityEngine.dll文件以便能够顺利的创建文件的路径。一般创建文件前我们都会先判定这个文件是否存，不存在的话在创建。文件路径我们就放在我们Data文件夹里，先创建名为Logs的文件夹我们的输出日志就放在这个文件夹里。写入的时候加上DateTime用来作为行的开头</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></div><div class="line">        <span class="comment"><span class="doctag">///</span> 添加内容到指定位置的文档，若文档不存在则创建该文档</span></div><div class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></div><div class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="context"&gt;</span>需要添加的内容<span class="doctag">&lt;/param&gt;</span></span></div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Debug</span>(<span class="params"><span class="keyword">string</span> context</span>)</span></div><div class="line"><span class="function">        </span>&#123;</div><div class="line">            path = Application.dataPath + <span class="string">"/Logs"</span>;</div><div class="line">            <span class="comment">//判定是否有该文件夹,没得话则创建该文件夹</span></div><div class="line">            <span class="keyword">if</span> (!Directory.Exists(path))</div><div class="line">            &#123;</div><div class="line">                Directory.CreateDirectory(path);</div><div class="line">            &#125;</div><div class="line">            StreamWriter sw;</div><div class="line"></div><div class="line">            FileInfo fi = <span class="keyword">new</span> FileInfo(path + <span class="string">"/"</span> + FileName(<span class="string">".txt"</span>));</div><div class="line">            <span class="comment">//判定是否有该文件</span></div><div class="line">            <span class="keyword">if</span> (!fi.Exists)</div><div class="line">            &#123;</div><div class="line">                DeleteFile();</div><div class="line"></div><div class="line">                sw = fi.CreateText();</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">else</span></div><div class="line">            &#123;</div><div class="line">                sw = fi.AppendText();</div><div class="line">            &#125;</div><div class="line"></div><div class="line">            sw.WriteLine(System.DateTime.Now + <span class="string">"   "</span> + context);</div><div class="line">            sw.Close();</div><div class="line">            <span class="comment">//其实Close方法内部已经实现了Dispose方法&lt;br&gt;        </span></div><div class="line">            sw.Dispose();</div><div class="line">        &#125;</div></pre></td></tr></table></figure><h2><span id="第二步定义文件的名字">第二步：定义文件的名字</span></h2><p>为了方便记录我就用年月日做为文件名字</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// &lt;summary&gt;</span></div><div class="line">        <span class="comment"><span class="doctag">///</span> 用当前的年月日作为文档的名字</span></div><div class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></div><div class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="format"&gt;</span>文档的格式<span class="doctag">&lt;/param&gt;</span></span></div><div class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;returns&gt;</span><span class="doctag">&lt;/returns&gt;</span></span></div><div class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">string</span> <span class="title">FileName</span>(<span class="params"><span class="keyword">string</span> format</span>)</span></div><div class="line"><span class="function">        </span>&#123;</div><div class="line">            <span class="keyword">string</span> name = System.DateTime.Now.Year.ToString() + <span class="string">"-"</span> +       System.DateTime.Now.Month.ToString()</div><div class="line">                + <span class="string">"-"</span> + System.DateTime.Now.Day.ToString()+format;</div><div class="line"></div><div class="line">            <span class="keyword">return</span> name;</div><div class="line">        &#125;</div></pre></td></tr></table></figure><h2><span id="第三步优化">第三步：优化</span></h2><p>因为我是用年月日做为文件的名字的，这样就会有个问题随着时间文件会越来越多，当时就想有木有自动删除的代码，就去查了C#代码最后实现删除10天以前的文件的功能</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></div><div class="line">        <span class="comment"><span class="doctag">///</span> 删除10天以前的文件</span></div><div class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></div><div class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">DeleteFile</span>(<span class="params"></span>)</span></div><div class="line"><span class="function">        </span>&#123;</div><div class="line">            DirectoryInfo dir = <span class="keyword">new</span> DirectoryInfo(path);</div><div class="line">            <span class="comment">//int fileNum = dir.GetFiles().Length;</span></div><div class="line">            <span class="keyword">foreach</span> (FileInfo info <span class="keyword">in</span> dir.GetFiles())</div><div class="line">            &#123;</div><div class="line">                <span class="keyword">if</span> (info.CreationTime &lt; System.DateTime.Now.AddDays(<span class="number">-10</span>))</div><div class="line">                &#123;</div><div class="line">                    info.Delete();</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;</div></pre></td></tr></table></figure><p>做完以上步骤之后就可以生成dll文件了。</p><h2><span id="第四步功能实现">第四步：功能实现</span></h2><p>把dll文件放进Unity里的Plugins的文件夹里后就可以在代码中实现了<br>在代码的头部引入dll文件</p><figure class="highlight gauss"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">Log</span>.<span class="keyword">Debug</span>(<span class="string">"这是输出的内容"</span>);</div></pre></td></tr></table></figure><p>ok，这样在软件运行后就可以在Data里的Log文件夹中找到我们的输出文件了。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1&gt;&lt;span id=&quot;关于输出日志&quot;&gt;关于输出日志&lt;/span&gt;&lt;/h1&gt;
&lt;p&gt;到了一家新公司，做的都是面对甲方现场的项目。正式接触项目之前就被告知甲方的现场总是会出现各种奇葩的问题，这就导致技术人员要无数次的出差去测试Bug并解决。好坏我就不评论了，毕竟这种模式已经进行
      
    
    </summary>
    
    
      <category term="Unity" scheme="http://live1158.github.io/tags/Unity/"/>
    
  </entry>
  
  <entry>
    <title>写在开始之前</title>
    <link href="http://live1158.github.io/2017/11/02/%E6%88%91%E7%9A%84%E5%8D%9A%E5%AE%A2/"/>
    <id>http://live1158.github.io/2017/11/02/我的博客/</id>
    <published>2017-11-02T14:34:24.407Z</published>
    <updated>2017-11-05T14:20:29.520Z</updated>
    
    <content type="html"><![CDATA[<p>关于目前的境遇</p><p>不知道怎么糊里糊涂的就被公司安排做Android了，然而我并不怎么会呀，所以一直在疯狂的补Android。我还是想做游戏，为了保持战斗力还是要学习游戏开发的。<br>目前正在看Unreal4、代码的简洁之道也在看、C++也在进行中。接下来还有Shader要看，感觉时间不够用呀，为了督促自己，也为了记录自己遇到的问题，所以就在Github上挂了这个博客。如果您在浏览的过程中<br>遇到任何问题或发现什么问题请邮件联系我。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;关于目前的境遇&lt;/p&gt;
&lt;p&gt;不知道怎么糊里糊涂的就被公司安排做Android了，然而我并不怎么会呀，所以一直在疯狂的补Android。我还是想做游戏，为了保持战斗力还是要学习游戏开发的。&lt;br&gt;
目前正在看Unreal4、代码的简洁之道也在看、C++也在进行中。接下来还有
      
    
    </summary>
    
    
      <category term="杂谈" scheme="http://live1158.github.io/tags/%E6%9D%82%E8%B0%88/"/>
    
  </entry>
  
</feed>
